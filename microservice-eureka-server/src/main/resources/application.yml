spring:
  application:
    name: discovery-service
---
server:
  port: 8761
spring:
  profiles: zone1
eureka:
  instance:
    hostname: peer1
      #prefer-ip-address: false #是否优先使用ip来作为主机名
      # 设置客户端向服务端发送一次心跳的时间间隔,默认30s,即多久去注册中心续约
      #lease-renewal-interval-in-seconds: 1
      # 定义服务多久不去续约认为服务失效,如果服务没有收到心跳会等90s(默认)后从注册表中删除实例
    #lease-expiration-duration-in-seconds: 2
  server:
    #自我保护模式
    enable-self-preservation: false
    #缓存响应，默认30s
    #response-cache-update-interval-ms: 3000
    #eureka检查客户端心跳默认为60s
    #租约续订间隔和租约到期的持续时间默认为60s才能删除服务实例
    #eviction-interval-timer-in-ms: 5000
  client: #当前应用程序应为一个服务器,因而须通知内建Eureka客户端不要进行自身的注册。
    # registerWithEureka: false     #如遇到问题则用这种名称方式
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://peer2:8762/eureka/
---
server:
  port: 8762
spring:
  profiles: zone2
eureka:
  instance:
    hostname: peer2
      #prefer-ip-address: false #是否优先使用ip来作为主机名
      # 设置客户端向服务端发送一次心跳的时间间隔,默认30s,即多久去注册中心续约
      #lease-renewal-interval-in-seconds: 1
    # 定义服务多久不去续约认为服务失效,如果服务没有收到心跳会等90s(默认)后从注册表中删除实例
    #lease-expiration-duration-in-seconds: 2
  server:
    #自我保护模式
    enable-self-preservation: false
    #缓存响应，默认30s
    #response-cache-update-interval-ms: 3000
    #eureka检查客户端心跳默认为60s
    #租约续订间隔和租约到期的持续时间默认为60s才能删除服务实例
    #eviction-interval-timer-in-ms: 5000
  client: #当前应用程序应为一个服务器,因而须通知内建Eureka客户端不要进行自身的注册。
    # registerWithEureka: false     #如遇到问题则用这种名称方式
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://peer1:8761/eureka/

